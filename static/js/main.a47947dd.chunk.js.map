{"version":3,"sources":["images/header__logo.svg","images/profile__edit-button_image.svg","components/Header.js","components/Card.js","utils/constants.js","utils/Api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headerLogoImage","alt","Card","title","likeCounter","onCardClick","onClick","type","document","querySelector","api","token","baseUrl","cohort","this","_token","_baseUrl","urlPostfix","fetch","headers","authorization","then","result","ok","json","Promise","reject","status","name","about","method","body","JSON","stringify","catch","err","console","log","link","cardId","likes","idOnServer","isLiked","methodValue","avatar","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setDescription","userAvatar","setAvatar","cards","setCards","useEffect","fetchData","data","editButtonImage","map","card","key","_id","length","Footer","PopupWithForm","onClose","isOpen","actionCaption","children","ImagePopup","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","e","target","id","placeholder","minLength","maxLength","pattern","required","noValidate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a47947dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header__logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile__edit-button_image.58afbe73.svg\";","import React from 'react';\r\nimport headerLogoImage from '../images/header__logo.svg';\r\n\r\nfunction Header(){\r\n    return (\r\n        <header className=\"header\">\r\n        <img className=\"header__logo\" src={headerLogoImage} alt=\"Логотип\" />\r\n      </header>\r\n    );\r\n\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nfunction Card({ title, src, alt, likeCounter, onCardClick }) {\r\n    return (\r\n        <div className=\"element\">\r\n            <img className=\"element__image\" src={src} alt={alt} onClick={onCardClick} />\r\n            <button type=\"button\" className=\"element__delete-button\"></button>\r\n            <p className=\"element__title\">{title}</p>\r\n            <div className=\"element__wrapper\">\r\n                <button className=\"element__like\"></button>\r\n                <p className=\"element__like-counter\">{likeCounter}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card","\r\n/* page elements const */\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\nconst editAvatar = document.querySelector('.profile__avatar-edit');\r\nconst profileFullName = document.querySelector('.profile__full-name');\r\nconst profileVocation = document.querySelector('.profile__vocation');\r\nconst profileAvatar = document.querySelector('.profile__avatar');\r\n/* popup const */\r\nconst popupFullName = document.querySelector('#full-name');\r\nconst popupVocation = document.querySelector('#vocation');\r\nconst popupAvatar = document.querySelector('#link');\r\n\r\n/* config */\r\nconst targetContainer = '.elements'; // target for inserting new instances of Card\r\nconst cardTemplate = '.element__template';\r\nconst token = '91f20ff1-daca-4d5c-889a-e104c276a690';\r\nconst idOnServer = 'a2ce638f0c69119d45d04bb7';\r\nconst cohort = 'cohort-12';\r\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/'\r\nconst userInfoPostfix = `/users/me`;\r\nconst cardsPostfix = `/cards`;\r\n\r\n/*validation const */\r\nconst configValidation = {\r\n  formSelector: '.popup__container',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__action-button',\r\n  inactiveButtonClass: 'popup__action-button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_active'\r\n};\r\n// const editFormValidaion = new FormValidator(configValidation, \".popup__container_edit\");\r\n// const addFormValidation = new FormValidator(configValidation, \".popup__container_add\");\r\n// const avatarFormValidation = new FormValidator(configValidation, \".popup__container_avatar\");\r\n\r\nexport {\r\n  editButton,\r\n  addButton,\r\n  editAvatar,\r\n  profileFullName,\r\n  profileVocation,\r\n  profileAvatar,\r\n  popupFullName,\r\n  popupVocation,\r\n  popupAvatar,\r\n  targetContainer,\r\n  cardTemplate,\r\n  configValidation,\r\n  // editFormValidaion,\r\n  // addFormValidation,\r\n  // avatarFormValidation,\r\n  token,\r\n  cohort,\r\n  baseUrl,\r\n  userInfoPostfix,\r\n  cardsPostfix,\r\n  idOnServer,\r\n  // editActionButton,\r\n  // avatarActionButton,\r\n  // addActionButton,\r\n};\r\n","import {token, baseUrl, cohort} from './constants.js';\r\n\r\nclass Api {\r\n  constructor(token, baseUrl, cohort) {\r\n    this._token = token;\r\n    this._baseUrl = `${baseUrl}${cohort}`;\r\n  }\r\n  fetchData(urlPostfix) {\r\n    return fetch(`${this._baseUrl}${urlPostfix}`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then((result) => {\r\n        if (result.ok) { return result.json(); }\r\n        else { return Promise.reject(`Ошибка: ${result.status}`); }\r\n      });\r\n  }\r\n  editProfile(urlPostfix, name, about) {\r\n    return fetch(`${this._baseUrl}${urlPostfix}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${name}`,\r\n        about: `${about}`\r\n      })\r\n    })\r\n      .catch((err) => { console.log(err) }); //Эту часть не трогаю до след практ работы. Но логика ясна.\r\n  }\r\n\r\n  postCard(urlPostfix, name, link) {\r\n    return fetch(`${this._baseUrl}${urlPostfix}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${name}`,\r\n        link: `${link}`\r\n      })\r\n    })\r\n      .then((result) => result.json())\r\n      .catch((err) => { console.log(err) });\r\n  }\r\n\r\n  deleteCard(urlPostfix) {\r\n    return fetch(`${this._baseUrl}${urlPostfix}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .catch((err) => { console.log(err) });\r\n  }\r\n  likeCard(urlPostfix, cardId, likes, idOnServer, isLiked) {\r\n    let methodValue;\r\n    isLiked ? methodValue = 'DELETE' : methodValue = 'PUT'\r\n    return fetch(`${this._baseUrl}${urlPostfix}/likes/${cardId}`, {\r\n      method: methodValue,\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then((result) => result.json())\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  updateAvatar(urlPostfix, link) {\r\n    return fetch(`${this._baseUrl}${urlPostfix}/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: `${link}`\r\n      })\r\n    })\r\n      .then((result) => {\r\n        if (result.ok) { return result.json(); }\r\n        else { return Promise.reject(`Ошибка: ${result.status}`); }\r\n      })\r\n      .catch((err) => { console.log(err) });\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api(token, baseUrl, cohort);\r\n\r\nexport default api","import React from 'react';\r\nimport Card from './Card.js';\r\nimport editButtonImage from '../images/profile__edit-button_image.svg';\r\nimport {\r\n    userInfoPostfix,\r\n    cardsPostfix,\r\n} from '../utils/constants.js';\r\nimport api from '../utils/Api.js';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\r\n    const [userName, setUserName] = React.useState('');\r\n    const [userDescription, setDescription] = React.useState('');\r\n    const [userAvatar, setAvatar] = React.useState('');\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        api.fetchData(userInfoPostfix)\r\n            .then(({ name, avatar, about }) => {\r\n                setUserName(name);\r\n                setDescription(about);\r\n                setAvatar(avatar);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n              })\r\n        api.fetchData(cardsPostfix)\r\n            .then((data) => setCards(data))\r\n            .catch((err) => {\r\n                console.log(err);\r\n              })\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__wrapper\">\r\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"Фото профиля\" />\r\n                    <img className=\"profile__avatar-edit\" src={editButtonImage} alt=\"Редактировать\" onClick={onEditAvatar} />\r\n                </div>\r\n                <div className=\"profile__profile-info\">\r\n                    <h2 className=\"profile__full-name\">{userName}</h2>\r\n                    <button className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n                    <p className=\"profile__vocation\">{userDescription}</p>\r\n                </div>\r\n                <button className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n            </section>\r\n            <section className=\"elements\">\r\n                {cards.map((card) => (<Card title={card.name} src={card.link} alt={card.name} key={card._id} likeCounter={card.likes.length} onCardClick={onCardClick} />))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main\r\n\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, title, onClose, isOpen, actionCaption, children }) {\r\n  return (\r\n    <section className={`popup popup_${name} ${isOpen && \"popup_opened\"}`}>\r\n      <form className={`popup__container popup__container_${name}`}>\r\n        <h2 className=\"popup__heading\">{title}</h2>\r\n        <button type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\r\n        {children}\r\n        <button type=\"submit\" className={`popup__action-button popup__action-button_${name}`}>{actionCaption}</button>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\nexport default PopupWithForm","import React from 'react';\r\n\r\nfunction ImagePopup({ card, isOpen, onClose }) {\r\n  return (\r\n    <section className={`popup popup-enlarge ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__container-enl\">\r\n        <img className=\"popup__image\" src={card.src} alt={card.alt} /><button type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\r\n        <p className=\"popup__caption\">{card.alt}</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ImagePopup","import React from 'react';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport ImagePopup from './ImagePopup.js';\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\r\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState('');\r\n\r\n  function handleCardClick(e) {\r\n    setSelectedCard(e.target);\r\n    setImagePopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setImagePopupOpen(false);\r\n    setSelectedCard('');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"page\">\r\n        <Header />\r\n        <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\r\n        <Footer />\r\n        <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" actionCaption=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\r\n          <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"full-name\" placeholder=\"Имя полностью\" minLength=\"2\"\r\n            maxLength=\"40\" pattern=\"[a-zA-ZА-ЯЁа-яё\\s\\-]+[^\\s\\-]+\" required noValidate />\r\n          <p className=\"popup__input-error\" id=\"full-name-error\"></p>\r\n          <input type=\"text\" className=\"popup__input\" name=\"about\" id=\"vocation\" placeholder=\"Призвание\" minLength=\"2\"\r\n            maxLength=\"200\" required noValidate />\r\n          <p className=\"popup__input-error\" id=\"vocation-error\"></p>\r\n        </PopupWithForm>\r\n\r\n        <PopupWithForm name=\"add\" title=\"Новое место\" actionCaption=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} >\r\n          <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"name\" placeholder=\"Название\" minLength=\"2\"\r\n            maxLength=\"30\" pattern=\"[a-zA-ZА-ЯЁа-яё\\s\\-]+[^\\s\\-]+\" required noValidate />\r\n          <p className=\"popup__input-error\" id=\"name-error\"></p>\r\n          <input type=\"url\" className=\"popup__input\" name=\"url\" id=\"url\" placeholder=\"Ссылка на картинку\" required noValidate />\r\n          <p className=\"popup__input-error\" id=\"url-error\"></p>\r\n        </PopupWithForm>\r\n\r\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" actionCaption=\"Да\" />\r\n\r\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" actionCaption=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\r\n          <input type=\"url\" className=\"popup__input\" name=\"url\" id=\"link\" placeholder=\"Ссылка на картинку\" required noValidate />\r\n          <p className=\"popup__input-error\" id=\"link-error\"></p>\r\n        </PopupWithForm>\r\n\r\n        <ImagePopup isOpen={isImagePopupOpen} card={selectedCard} onClose={closeAllPopups} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}